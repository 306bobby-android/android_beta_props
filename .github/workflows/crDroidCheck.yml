name: Daily Check and Run

on:
  workflow_dispatch:
  schedule:
    - cron: "0 20 * * *" # Runs every day at midnight UTC

jobs:
  check-and-trigger:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3

      - name: Grab IDs
        id: grab_id
        run: |
          if [ -f RELEASEA16 ]; then
            RELEASE_IDA16=$(cat RELEASEA16 | tr -d '\n')
            echo "RELEASE_IDA16=$RELEASE_IDA16" >> $GITHUB_ENV
          else
            echo "Warning: RELEASEA16 file not found in the repository!"
          fi
          if [ -f RELEASEA15 ]; then
            RELEASE_IDA15=$(cat RELEASEA15 | tr -d '\n')
            echo "RELEASE_IDA15=$RELEASE_IDA15" >> $GITHUB_ENV
          else
            echo "Warning: RELEASEA15 file not found in the repository!"
          fi

          BUILD_IDA16=$(curl -s https://developer.android.com/about/versions/16/download | \
          grep -A1 '<td><b>Build</b></td>' | tail -n1 | sed -E 's/<td>([^<]+)<\/td>/\1/' | tr -d '\n')
          if [ -z "$BUILD_IDA16" ]; then
            echo "Error: Failed to fetch BUILD_ID from the page."
            exit 1
          fi
          echo "BUILD_IDA16=$BUILD_IDA16" >> $GITHUB_ENV

          BUILD_IDA15=$(curl -s https://developer.android.com/about/versions/15/download | \
          grep -A1 '<td><b>Build</b></td>' | tail -n1 | sed -E 's/<td>([^<]+)<\/td>/\1/' | tr -d '\n')
          if [ -z "$BUILD_IDA15" ]; then
            echo "Error: Failed to fetch BUILD_ID from the page."
            exit 1
          fi
          echo "BUILD_IDA15=$BUILD_IDA15" >> $GITHUB_ENV

          if [ "$RELEASE_IDA16" != "$BUILD_IDA16" ]; then
            echo "New build ID detected: $BUILD_IDA16"
            echo "triggerA16=true" >> $GITHUB_ENV
            echo "$BUILD_IDA16" > RELEASEA16
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add RELEASEA16
            git commit -m "Update RELEASE file with ID: $BUILD_IDA16"
            git push origin main --force
            echo "Updated A16 RELEASE file with ID: $BUILD_IDA16"
          else
            echo "No new build ID detected."
            echo "triggerA16=false" >> $GITHUB_ENV
          fi
          if [ "$RELEASE_IDA15" != "$BUILD_IDA15" ]; then
            echo "New build ID detected: $BUILD_IDA15"
            echo "triggerA15=true" >> $GITHUB_ENV
            echo "$BUILD_IDA15" > RELEASEA15
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add RELEASEA15
            git commit -m "Update RELEASE file with ID: $BUILD_IDA15"
            git push origin main --force
            echo "Updated A15 RELEASE file with ID: $BUILD_IDA15"
          else
            echo "No new build ID detected."
            echo "triggerA15=false" >> $GITHUB_ENV
          fi


      - name: Trigger Build Script A15
        if: env.triggerA15 == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Triggering the A15 prop extraction."
          gh workflow run "A15 certified props extraction"


      - name: Trigger Build Script A16
        if: env.triggerA16 == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |          
          echo "Triggering the A16 prop extraction."
          gh workflow run "A16 certified props extraction"

